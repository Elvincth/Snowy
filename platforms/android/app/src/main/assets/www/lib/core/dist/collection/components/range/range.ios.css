:host {
  /**
   * @prop --bar-background: Background of the range bar
   * @prop --bar-background-active: Background of the active range bar
   * @prop --bar-height: Height of the range bar
   * @prop --height: Height of the range
   * @prop --knob-background: Background of the range knob
   * @prop --knob-border-radius: Border radius of the range knob
   * @prop --knob-box-shadow: Box shadow of the range knob
   * @prop --knob-size: Size of the range knob
   */
  --knob-handle-size: calc(var(--knob-size) * 2);
  display: flex;
  position: relative;
  flex: 1;
  align-items: center;
  font-family: var(--ion-font-family, inherit);
  user-select: none; }

::slotted(ion-label) {
  flex: initial; }

::slotted(ion-icon[slot]) {
  font-size: 24px; }

.range-slider {
  position: relative;
  flex: 1;
  width: 100%;
  height: var(--height);
  contain: size layout style;
  cursor: grab; }

:host(.range-pressed) .range-slider {
  cursor: grabbing; }

.range-pin {
  position: absolute;
  background: var(--ion-color-base);
  color: var(--ion-color-contrast);
  text-align: center;
  box-sizing: border-box; }

.range-knob-handle {
  left: 0;
  top: calc((var(--height) - var(--knob-handle-size)) / 2);
  margin-left: calc(0px - var(--knob-handle-size) / 2);
  position: absolute;
  width: var(--knob-handle-size);
  height: var(--knob-handle-size);
  text-align: center; }
  .range-knob-handle:active, .range-knob-handle:focus {
    outline: none; }

.range-bar {
  left: 0;
  top: calc((var(--height) - var(--bar-height)) / 2);
  position: absolute;
  width: 100%;
  height: var(--bar-height);
  background: var(--bar-background);
  pointer-events: none; }

.range-knob {
  border-radius: var(--knob-border-radius);
  left: calc(50% - var(--knob-size) / 2);
  top: calc(50% - var(--knob-size) / 2);
  position: absolute;
  width: var(--knob-size);
  height: var(--knob-size);
  background: var(--knob-background);
  box-shadow: var(--knob-box-shadow);
  z-index: 2;
  pointer-events: none; }

:host(.range-pressed) .range-bar-active {
  will-change: left, right; }

:host(.range-pressed) .range-knob-handle {
  will-change: left; }

:host(.in-item) {
  width: 100%; }

:host(.in-item) ::slotted(ion-label) {
  align-self: center; }

:host {
  --knob-border-radius: 50%;
  --knob-background: var(--ion-background-color, #fff);
  --knob-box-shadow: 0 3px 1px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.13), 0 0 0 1px rgba(0, 0, 0, 0.02);
  --knob-size: 28px;
  --bar-height: 1px;
  --bar-background: var(--ion-background-color-step-250, #bfbfbf);
  --bar-background-active: var(--ion-color-primary, #3880ff);
  --height: 42px;
  padding: 8px 16px; }

:host(.ion-color) .range-bar-active,
:host(.ion-color) .range-tick-active {
  background: var(--ion-color-base); }

:host(.range-has-pin) {
  padding-top: 20px; }

.range-bar-active {
  bottom: 0;
  width: auto;
  background: var(--bar-background-active); }

.range-tick {
  margin-left: -0.5px;
  border-radius: 0;
  position: absolute;
  top: 17.5px;
  width: 1px;
  height: 8px;
  background: var(--ion-background-color-step-250, #bfbfbf);
  pointer-events: none; }

.range-tick-active {
  background: var(--bar-background-active); }

.range-pin {
  transform: translate3d(0,  28px,  0) scale(0.01);
  padding: 8px;
  display: inline-block;
  position: relative;
  top: -20px;
  min-width: 28px;
  transition: transform 120ms ease;
  background: transparent;
  color: var(--ion-text-color, #000);
  font-size: 12px;
  text-align: center; }

.range-knob-pressed .range-pin {
  transform: translate3d(0,  0,  0) scale(1); }

:host(.range-disabled) {
  opacity: .5; }
