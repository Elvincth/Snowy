"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const lodash = require("lodash");
const errors_1 = require("./errors");
const options_1 = require("./options");
const guards_1 = require("../guards");
class BaseExecutor {
    constructor(namespace) {
        this.namespace = namespace;
    }
    execute(argv, env) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const parsedArgs = options_1.stripOptions(argv, { includeSeparated: false });
            const location = yield this.namespace.locate(parsedArgs);
            if (guards_1.isNamespace(location.obj)) {
                throw new errors_1.CommandNotFoundError('Command not found.', parsedArgs);
            }
            const cmd = location.obj;
            const metadata = yield cmd.getMetadata();
            const options = options_1.parseArgs(lodash.drop(argv, location.path.length - 1), options_1.metadataToParseArgsOptions(metadata));
            const inputs = options._;
            yield cmd.validate(inputs);
            yield cmd.run(inputs, options, { location });
        });
    }
}
exports.BaseExecutor = BaseExecutor;
class Executor extends BaseExecutor {
}
exports.Executor = Executor;
function execute(namespace, argv, env) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const executor = new BaseExecutor(namespace);
        yield executor.execute(argv, env);
    });
}
exports.execute = execute;
